# server {
#     listen 80;
#     server_name 23.94.59.111;

#     location /play/ {
#         set $token "";
#         set $file_path "";

#         if ($uri ~* ^/play/([^/]+)/(.+)$) {
#             set $token $1;
#             set $file_path $2;
#         }

#         # Proxy request to the backend for token verification
#         proxy_set_header X-Original-URI $file_path;
#         proxy_set_header X-Token $token;
#         proxy_pass http://127.0.0.1:3001/auth;
        
#         proxy_intercept_errors on;
#         error_page 401 403 = @403;
#         error_page 500 502 503 504 = @500;
#     }

#     location /play-serve/ {
#         internal;
#         alias /var/www/hls/;
#     }

#     location @403 {
#         return 403;
#     }

#     location @500 {
#         return 500;
#     }
# }

# TEST - 2

server {
    server_name hls-stream.mooo.com;

    location /play/ {
        set $token "";
        set $file_path "";

        if ($uri ~* ^/play/([^/]+)/(.+)$) {
            set $token $1;
            set $file_path $2;
        }

        # Proxy request to the backend for token verification
        proxy_set_header X-Original-URI $file_path;
        proxy_set_header X-Token $token;
        proxy_pass_request_body off;
        proxy_pass http://127.0.0.1:3001/auth;

        proxy_intercept_errors on;
        error_page 401 403 = @403;
        error_page 500 502 503 504 = @500;
    }

    location /play-serve/ {
        internal;
        alias /var/www/hls/;
        add_header Content-Type application/vnd.apple.mpegurl;
        add_header Access-Control-Allow-Origin *;  # Allow CORS from any origin
        add_header Access-Control-Allow-Methods "GET, OPTIONS";  # Allow GET requests and OPTIONS for preflight
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, X-Token";  # Allow these headers
    }

    location @403 {
        return 403;
    }

    location @500 {
        return 500;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/hls-stream.mooo.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/hls-stream.mooo.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}


server {
    if ($host = hls-stream.mooo.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    server_name hls-stream.mooo.com;
    return 404; # managed by Certbot


}
